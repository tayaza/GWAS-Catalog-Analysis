library(pvclust)
library(cluster)
library(factoextra)
library(NbClust)
trait.data <- read.delim("genes/corrplot/gene_matrix.txt", header = T)
t_names <- read.delim("genes/corrplot/traits.txt", header = F)
trait_names <- t_names$V1
trait.matrix <- matrix(, nrow = length(trait_names), ncol = length(trait_names), 
                      dimnames = list(trait_names, trait_names))
for (i in rownames(trait.matrix)){
  for (j in colnames(trait.matrix)){
    i.index <- which(trait.data$trait_x == i)
    for (x in i.index){
      if (trait.data[x,2] == j){
        trait.matrix[i,j] <- trait.data[x,5]
      }
        
    }
  }
}
trait.matrix <- replace(trait.matrix, is.na(trait.matrix), 0)
if(!require(devtools)) install.packages("devtools")
library(dendextend)
res.pv <- pvclust(trait.matrix, method.hclust="ward.D2", method.dist="euclidean", nboot=100)
stop(message)
set.sed(123)
set.seed(123)
res.pv <- pvclust(trait.matrix, method.hclust="ward.D2", method.dist="euclidean", nboot=100)
res.pv1k <- pvclust(trait.matrix, method.hclust="ward.D2", method.dist="euclidean", nboot=1000)
grp <- cutree(res.pv, k=9)
png("res.pv.png", width=4000, height=4000, units="px", pointsize=12)
plot(res.pv, hand=-1, cex=0.3)
plot(res.pv, hang=-1, cex=0.3)
dev.off()
png("res.pv10k.png", width=10000, height=10000, units="px", pointsize=22)
plot(res.pv, hang=-1, cex=0.5)
dev.off()
hc_w <- hclust(dist_eu, method = "ward.D2")
dist_eu <- dist(trait.matrix, method = "euclidean") 
hc_w <- hclust(dist_eu, method = "ward.D2")
grp <- cutree(hc_w, k=9)
table(grp)
sink("cluster01.txt", append=F, split=F)
rownames(df)[grp==1]
sink()
rownames(df)[grp==1]
rownames(df)[grp==]
table(grp)
colnames(dist_eu)
colnames(trait.matrix)
colnames(dist_eu)
png("hc_w10k.png", width=10000, height=10000, units="px", pointsize=22)
plot(hc_w, cex=0.5)
rect.hclust(hc_w, k=9, border=1:9)
dev.off()
png("hc_w10k.png", width=10000, height=10000, units="px", pointsize=22)
rect.hclust(hc_w, k=9, border=c("#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "c7eae5", "#80cdc1", "#35978f", "#01665e"))
plot(hc_w, cex=0.5)
rect.hclust(hc_w, k=9, border=c("#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "c7eae5", "#80cdc1", "#35978f", "#01665e"))
rect.hclust(hc_w, k=9, border=c("#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e"))
dev.off()
png("hc_w10k.png", width=10000, height=10000, units="px", pointsize=22)
plot(hc_w, cex=0.5)
png("hc_w10k.png", width=10000, height=10000, units="px", pointsize=22)
plot(hc_w, cex=0.5)
rect.hclust(hc_w, k=9, border=c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"))
dev.off()
rownames(trait.matrix)[grp==1]
sink("cluster01.txt", append=F, split=F)
rownames(trait.matrix)[grp==1]
sink()
sink("cluster02.txt", append=F, split=F)
rownames(trait.matrix)[grp==2]
sink()
sink("cluster03.txt", append=F, split=F)
rownames(trait.matrix)[grp==3]
sink()
sink("cluster04.txt", append=F, split=F)
rownames(trait.matrix)[grp==4]
sink()
sink("cluster05.txt", append=F, split=F)
rownames(trait.matrix)[grp==5]
sink()
sink("cluster06.txt", append=F, split=F)
rownames(trait.matrix)[grp==6]
sink()
sink("cluster07.txt", append=F, split=F)
rownames(trait.matrix)[grp==7]
sink()
sink("cluster08.txt", append=F, split=F)
rownames(trait.matrix)[grp==8]
sink()
sink("cluster09.txt", append=F, split=F)
rownames(trait.matrix)[grp==9]
sink()
png("fclus_hc_w10k.png", width=10000, height=10000, units="px", pointsize=22)
fviz_cluster(list(data=trait.matrix, cluster=grp))
res.pv1k <- pvclust(trait.matrix, method.hclust="ward.D2", method.dist="euclidean", nboot=1000)
grp2 <- cutree(res.pv1k, k=25)
png("wD2_euc_1k_bootstrap.png", width=10000, height=10000, units="px", pointsize=22)
plot(res.pv1k, hing=-1, cex=0.5)
plot(res.pv1k, hang=-1, cex=0.5)
dev.off()
grp2 <- cutree(hc_w, k=25)
table(grp2)
for (i in grp2){ print(i)}
table(grp2)
for (i in 11){ print(i)}
for (i in 1:11){ print(i)}
for (i in 1:25){ sink(paste("cluster_b", i), append=F, split=f) rownames(hc_w)[grp==i] sink()}
rownames(hcw)[grp==1)
rownames(hcw)[grp==1]
rownames(hc_w)[grp==1]
rownames(trait.matrix)[grp2==9]
for (i in 1:25){ sink(paste("cluster_b", as.character(i),".txt"), append=F, split=f) rownames(trait.matrix)[grp==i] sink()}
for (i in 1:25){ sink(paste("cluster_b", as.character(i),".txt"), append=F, split=f), rownames(trait.matrix)[grp==i], sink()}
ty<-paste("cluster_b", as.character(5), ".txt")
ty
ty<-paste("cluster_b", as.character(5), ".txt", sep="")
ty
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep="")
, append=F, split=F)
rownames(trait.matrix)[grp==i]
sink()
}
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep="")
, append=F, split=F)
rownames(trait.matrix)[grp2==i]
sink()
}
rownames(trait.matrix)[grp2==25]
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep="")
, append=F, split=F)
rownames(trait.matrix)[grp2==i]
sink()
}
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep=""), append=F, split=f)
print(rownames(trait.matrix)[grp2==i])
sink()}
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep=""), append=F, split=F)
print(rownames(trait.matrix)[grp2==i])
sink()}
grp2 <- cutree(hc_w, k=25)
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep=""), append=F, split=F)
print(rownames(trait.matrix)[grp2==i])
sink()}
grp2 <- cutree(hc_w, k=22)
for (i in 1:25){sink(paste("cluster_b", as.character(i),".txt",sep=""), append=F, split=F)
print(rownames(trait.matrix)[grp2==i])
sink()}
res.pv1k
png("grouped_tree.png", width = 10000, height = 10000, units = "px", pointsize = 22)
plot(hc_w, cex = 0.5)
rect.hclust(hc_w, k = 22, 
            border = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "ffff33", "#a65628", "#f781bf", "#999999"))
dev.off()
png("grouped_tree.png", width = 10000, height = 10000, units = "px", pointsize = 22)
plot(hc_w, cex = 0.5)
rect.hclust(hc_w, k = 22, 
            border = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"))
dev.off()
png("tree_name.png", width = 10000, height = 10000, units = "px", pointsize = 22)
plot(res.pv1k, hang = -1, cex = 0.5)
pvrect(res.pv1k)
dev.off()
q()
q()
